				                      WEEK-3


LOCAL REPOSITORY  -> present on our system
REMOTE REPOSITORY -> present on servers like GITHUB 

> git push  -> git push is used to update the remote repository with our local changes.
> When we want to update our local repository to reflect changes made in the remote repository,command we would use is git pull.
> git pull updates the local repository by applying changes made in the remote repository.


						      REMOTES
 
> Remote repositories are a big part of the distributed nature of Git collaboration. It let lots of developers contribute to a project from their own workstations making changes to local copies of the project independently of one another. When they need to share their changes, they can issue git commands to pull code from a remote repository or push code into one. There are a bunch of ways to host remote repositories. As we called out, there is many internet-based Git hosting providers like GitHub, BitBucket or GitLab which offer similar services.

		 				
						WORKING WITH REMOTES

>> When we call a git clone to get a local copy of a remote repository, Git sets up that remote repository with the default name as "origin".
 
> git remote -v yields two URL's fetch,push. Mostly they will be same.

> But in some cases, you can have the fetch URL use HTTP for read only access, and the push URL use HTTPS or SSH for access control.

> This is fine as long as the contents of the repo that you read when fetching are the same that you write to in pushing. Remote repositories have a name assigned to them, by default, the assigned name is origin. This lets us track more than one remote in the same Git directory.

> If we want to get even more information about our remote, we can call "git remote show origin".

>> Whenever we're operating with remotes, Git uses remote branches to keep copies of the data that's stored in the remote repository. We could have a look at the remote branches that our Git repo is currently tracking by running "git branch -r".

>>> If we want to make a change to a remote branch, Pull the remote branch, merge it with the local branch, then push it back to its origin.

						FETCHING NEW CHANGES

> "git fetch" fetches remote updates but doesn't merge; "git pull" fetches remote updates and merges.

> Sometimes due to updates made, we get msg as the local branches "out of date" . This happens when there were commits done to the repo that aren't yet reflected locally. Git doesn't keep remote and local branches in sync automatically, it waits until we execute commands to move data around when we're ready.

> To sync the data, we use the "git fetch" command. This command copies the commits done in the remote repository to the remote branches, so we can see what other people have committed.

> If we want to integrate the branches into our master branch, we can perform a merge operation, which merges the origin/master branch into our local master branch.

>>  We can use git fetch like this to review the changes that happen in the remote repository. If we're happy with them, we can use git merge to integrate them into the local branch. Fetching commits from a remote repository and merging them into your local repository is such a common operation in Git that there's a handy command to let us do it all in one action

			
						UPDATING THE LOCAL REPOSITORY

> Running "git pull" will fetch the remote copy of the current branch and automatically tries to merge it into the current local branch.
 
> Say we have a branch named "exper" in our remote repo. To create a local branch for it we run "git checkout exper"

> As long as there are no conflicts, Git will move the current branch tip up to the target branch tip and combine histories of both commits. So in such cases "git pull" does Fast Forward Merge.

>> If we want to get the contents of remote branches without automatically merging any contents into the local branches, we can call "git remote update". 

>> An "explicit merge" creates a new merge commit. This alters the commit history and explicitly shows where a merge was executed.


							SOLVING CONFLICTS 






